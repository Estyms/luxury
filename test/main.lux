File :: struct {
    dummy: [216] u8;
}


read_file : func (name: * char, buffer: **char) {
    file : * File;

    fseek(file, 0, 2);
    file_size : u32 ;
    
    
    fseek(file, 0, 0);  
}


syscall_print : asm (text: * char, size : u64) -> u32 {
    mov %rsi, %rdx
    mov $1, %rax
    mov $1, %rbx
    mov %rdi, %rsi
    mov $0, %rdi
    syscall
    ret
}

print : func (out text: * char, data: u32)

print : func (text: * char) {
    size := 0;
    pointer := text;

    while @pointer {
        pointer = pointer + 1;
        size = size + 1;
    }

    syscall_print(text, size);
}

main : func (argument_count: u64, arguments: **char) {
    print("this is cool\n");
}
